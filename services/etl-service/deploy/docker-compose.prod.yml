version: '3.8'

services:
  etl-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: etl-service-prod
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      # Servicio
      - ETL_SERVICE_NAME=etl-production
      - ETL_SERVICE_PORT=9000
      - ETL_ENV=production
      - ETL_LOG_LEVEL=INFO
      - ETL_LOG_FILE=/app/logs/etl-service.log
      
      # Base de datos (usar variables de entorno del host)
      - ETL_DB_HOST=${ETL_DB_HOST}
      - ETL_DB_PORT=${ETL_DB_PORT:-3306}
      - ETL_DB_USER=${ETL_DB_USER}
      - ETL_DB_PASSWORD=${ETL_DB_PASSWORD}
      - ETL_DB_DATABASE=${ETL_DB_DATABASE}
      - ETL_DB_SSL=${ETL_DB_SSL:-true}
      
      # LLM
      - ETL_LLM_PROVIDER=${ETL_LLM_PROVIDER:-openai}
      - ETL_LLM_API_KEY=${ETL_LLM_API_KEY}
      - ETL_LLM_MODEL=${ETL_LLM_MODEL:-gpt-4o-mini}
      - ETL_LLM_BASE_URL=${ETL_LLM_BASE_URL}
      
      # KB (opcional)
      - ETL_KB_URL=${ETL_KB_URL}
      - ETL_KB_LOCAL_PATH=/app/data/chroma
      
      # ETL
      - ETL_ENABLED=true
      - ETL_BATCH_SIZE=${ETL_BATCH_SIZE:-500}
      - ETL_QUALITY_THRESHOLD=${ETL_QUALITY_THRESHOLD:-0.7}
      - ETL_INCREMENTAL_HOURS=${ETL_INCREMENTAL_HOURS:-6}
      - ETL_FULL_SYNC_TIME=${ETL_FULL_SYNC_TIME:-02:00}
      
      # Seguridad
      - ETL_CORS_ORIGINS=${ETL_CORS_ORIGINS:-*}
      - ETL_METRICS_ENABLED=${ETL_METRICS_ENABLED:-true}
    
    volumes:
      # Persistir logs
      - etl_logs:/app/logs
      # Persistir datos de KB local si se usa
      - etl_data:/app/data
      # Persistir configuraciones generadas
      - etl_configs:/app/configs
      # Montar documentación de BD (read-only)
      - ./docs/database:/app/docs/database:ro
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Opcional: Prometheus para métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: etl-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./deploy/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    depends_on:
      - etl-service

  # Opcional: Grafana para dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: etl-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  etl_logs:
    driver: local
  etl_data:
    driver: local
  etl_configs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: etl-network
